global
log 127.0.0.1 local2
chroot /var/lib/haproxy
pidfile /var/run/haproxy.pid
maxconn 4000
user haproxy
group haproxy
daemon
stats socket /var/lib/haproxy/stats
ssl-default-bind-ciphers PROFILE=SYSTEM
ssl-default-server-ciphers PROFILE=SYSTEM

defaults
mode http
log global
option httplog
option dontlognull
option http-server-close
option forwardfor except 127.0.0.0/8
option redispatch
retries 3
timeout http-request 10s
timeout queue 1m
timeout connect 10s
timeout client 1m
timeout server 1m
timeout http-keep-alive 10s
timeout check 10s
maxconn 3000

frontend ocp4-kubernetes-api-server
mode tcp
option tcplog
bind api.{{ zone_name }}:6443
default_backend ocp4-kubernetes-api-server

frontend ocp4-kubernetes-api-server-2
mode tcp
option tcplog
bind api-int.{{ zone_name }}:6443
default_backend ocp4-kubernetes-api-server

frontend ocp4-machine-config-server
mode tcp
option tcplog
bind api-int.{{ zone_name }}:22623
default_backend ocp4-machine-config-server

frontend ocp4-router-http
mode tcp
option tcplog
bind apps.{{ zone_name }}:80
default_backend ocp4-router-http

frontend ocp4-router-https
mode tcp
option tcplog
bind apps.{{ zone_name }}:443
default_backend ocp4-router-https

backend ocp4-kubernetes-api-server
mode tcp
balance source
{% for host in groups['bootstrap'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:6443 check
{% endfor %}
{% for host in groups['masters'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:6443 check
{% endfor %}

backend ocp4-machine-config-server
mode tcp
balance source
{% for host in groups['bootstrap'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:22623 check
{% endfor %}
{% for host in groups['masters'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:22623 check
{% endfor %}

backend ocp4-router-http
mode tcp
{% for host in groups['workers'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:80 check
{% endfor %}

backend ocp4-router-https
mode tcp
{% for host in groups['workers'] %}
server {{ hostvars[host]['inventory_hostname'].split(".")[0] }} {{ hostvars[host]['inventory_hostname'] }}:443 check
{% endfor %}
